<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnProcesar.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAgY0hSTQAAeiYAAICEAAD6AAAAgOgAAHUwAADqYAAAOpgAABdwnLpRPAAAA1hJREFUWEftlF1I
        U2EYx+3TiFoWalAZZU2ZFwWGXUkudNM5bW46vXDk1FRCIxNsfkxbgoGQF9PyIiK801K6nFYXYRchTDEL
        qivL1M19b3r2cY7p0/OeTEJd+LFZhAf+nM/3fX7n//zfNyRk+9h24B934BjynUTt/1ucXJFY8DwuLkaE
        AMdRe7cahCtMTYbiYiUjzhD1hIeHxyNAJGrXVoGwAMwcAwNvBhZk2Vnuy8lJzaGhoTEIcBi1I9ggLADl
        ngWL3QxWuwUeP3nESKSZUwkJ8Qosfgp1IJgQSwAmixGIbE4rGKanoKZORUsk4sGYmOgUBDiBCg0GyAoA
        AmG2ToPdaYf3H0ahoEBBi8RpnWFhYecR4Chqd8BAOBzOqgC/3DDbTOBw2eHlq/55qezKLJ9/SY1jzqKO
        BCQfPB7vJ4CHAlLMwsq8TCawO6z4zAIPO9oZmSxzLDEpUR4bG3sadXBTbggEAhbA43WDDYvYnbY/yjXj
        hEnDJNysrGCkUsnrlLSURKFQGMXn8/dtCESpVLIAXp8XnDMOIAVcs0722uFysFBWXB0mzITBNAUThnH4
        NvUVHbHBu9GRheycLMjJld0n86DWD1FdXb3kgNFsYFcBKyxIgkhErsmzaXxvRAhy73I5oa9P9z1dnAp5
        eTk3yDxyuXz9m5dWq+WmZ6SyDpDe2xwWtgUkeE50gDhBzuSeiHJT8OnzRygpK6SvKvM7m5s159ra2iI0
        Gs3ODbWgt7eXmyXNBB/tYwuTFsxSM2woSS48Xg8rmqHBbDFDo0bNFBUVvG1qakjq6uqK0ul0m9sbBgcH
        ufJcGdAIQP50hnKBG4sTR8j2PL8wDxRFwbOep0xJadFkXZ1Kodfro3EcZ0N/vHzQxMQEN1+Rt8IBr88D
        Pp8Phob089fLS9219aq7Y2NjsUajMQIANmb3asQ4GVdZqFjMAK53bIPb44bx8S+gbqih69U13cPDwxfw
        uyjU5uz2B1BaVsT2m4TMZrfhZtPG3FbdGunp6RZi0WhUYOz2B1BeUcaGrP+Fbk5VWzX9oEN7jTiDigyo
        3f4AKqsqQN1Y621puddqtVp5QbPbH4C2vfUOJvviot2HApLutU6CRc/8Zvf6d7K1FvL3HRbfE5R0bxZs
        e/x/5cAPgJLE0sO0OSQAAAAASUVORK5CYII=
</value>
  </data>
  <metadata name="mnuPrincipal.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <metadata name="stsStatus.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>280, 17</value>
  </metadata>
  <metadata name="$this.TrayHeight" type="System.Int32, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>45</value>
  </metadata>
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAIAICAAAAAACACoCAAAJgAAABAQAAAAAAgAaAUAAM4IAAAoAAAAIAAAAEAAAAABAAgAAAAAAAAE
        AAAAAAAAAAAAAAABAAAAAQAAAAEAACYSBAAkFgUAbD4ZAHM+HAB0Px4AiUoRAIhHIACKSxMAhEkhAIxM
        FQCFSiIAhksjAIdMJQCITSYAiU4nAIpPKQCLUCoAjFErAI9SLgCZYj4Am2U2AJpjPwCcZjcAm2RAAJ1n
        OACcZUEAnmg6AJ9pOwCgajwAmmdLAKFrPQCibD4AnGtFAKNtPwCkbkEAn21IAKVvQgCgbkkApnBDAKFv
        SgCncUQAonBLAKhyRQCjcUwApHJNAKVzTgCmdE8Ap3VQAKh2UQCpd1MAqnhUAKx5VQCtelYAp3pcAK57
        VwCvfFgAsH1ZAKp9XwCxfloAq35gALJ/WwCzglQArH9hALSDVQCtgGIAtIFdAK6BYwCwg1wAsYRdAKuC
        agCxg2UAsoVeALOGXwC0h2AAroVtALSGaAC1iGEAtoliALeKZACximkAsYhwALiLZQCyi2oAuYxmALSM
        awC6jWcAtItyALWNbAC7jmgAto5tALyPaQC3j24AvZBqALeOdQC/kWsAuZFwALmQdwC6knEAwJNsAMGU
        bQC1k3cAvJRzAMKVbgC9lXQAw5ZvALiVeQC+lnUAxJdwALmWegC/l3YAxZhxAMCYdwC7mHwAwpl5ALyZ
        fQDDmnoAxJt7AL6bfwC/nIAAxZ18AMaefQDBnoIAx59+AMKfgwDIoH8AyaGAAMShhgDKooEAy6OCAMCi
        iwDMpIMAzaWEAMKkjQDIpYkAz6aFAMmmigDQp4YA0aiHANKpiADGqJEAzaqOAMeqkgDVrIsAyqyUANCt
        kQDSrpIAzK6WANOvkwDNr5cAzrCYANWxlQDPsZkAyrKeANe1kADZt5MA07WeANq4lADPtqMA3bqWANG4
        pQDUu6gA1bypANa9qgDYv6sA2sGtAN7FsgDZxrYA4ci1ANzIuADdyboA3sq7AN/LvADhzb4A3M7CAOPQ
        wADi1MgA5NbKAOXXywDm2MwA59nNAOjazgDi2tIA6tvPAOvd0ADs3tIA597WAO3f0wDu4NQA6eHYAOri
        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
        /wAA/2YAAP+ZAAD/zAAzAAAAMwAzADMAZgAzAJkAMwDMADMA/wAzMwAAMzMzADMzZgAzM5kAMzPMADMz
        /wAzZgAAM2YzADNmZgAzZpkAM2bMADNm/wAzmQAAM5kzADOZZgAzmZkAM5nMADOZ/wAzzAAAM8wzADPM
        ZgAzzJkAM8zMADPM/wAz/zMAM/9mADP/mQAz/8wAM///AGYAAABmADMAZgBmAGYAmQBmAMwAZgD/AGYz
        AABmMzMAZjNmAGYzmQBmM8wAZjP/AGZmAABmZjMAZmZmAGZmmQBmZswAZpkAAGaZMwBmmWYAZpmZAGaZ
        zABmmf8AZswAAGbMMwBmzJkAZszMAGbM/wBm/wAAZv8zAGb/mQBm/8wAzAD/AP8AzACZmQAAmTOZAJkA
        mQCZAMwAmQAAAJkzMwCZAGYAmTPMAJkA/wCZZgAAmWYzAJkzZgCZZpkAmWbMAJkz/wCZmTMAmZlmAJmZ
        mQCZmcwAmZn/AJnMAACZzDMAZsxmAJnMmQCZzMwAmcz/AJn/AACZ/zMAmcxmAJn/mQCZ/8wAmf//AMwA
        AACZADMAzABmAMwAmQDMAMwAmTMAAMwzMwDMM2YAzDOZAMwzzADMM/8AzGYAAMxmMwCZZmYAzGaZAMxm
        zACZZv8AzJkAAMyZMwDMmWYAzJmZAMyZzADMmf8AzMwAAMzMMwDMzGYAzMyZAMzMzADMzP8AzP8AAMz/
        MwCZ/2YAzP+ZAMz/zADM//8AzAAzAP8AZgD/AJkAzDMAAP8zMwD/M2YA/zOZAP8zzAD/M/8A/2YAAP9m
        MwDMZmYA/2aZAP9mzADMZv8A/5kAAP+ZMwD/mWYA/5mZAP+ZzAD/mf8A/8wAAP/MMwD/zGYA/8yZAP/M
        zAD/zP8A//8zAMz/ZgD//5kA///MAGZm/wBm/2YAZv//AP9mZgD/Zv8A//9mACEApQBfX18Ad3d3AIaG
        hgCWlpYAy8vLALKysgDX19cA3d3dAOPj4wDq6uoA8fHxAPj4+ADw+/8ApKCgAICAgAAAAP8AAP8AAAD/
        /wD/AAAA/wD/AP//AAD///8AAAAAAACGAIYAhgAAAAAAAAAAAACLtfD19fK7i4YAAAAAAACR9Ly1tLS7
        8vS0hgAAAACR9LSLtPX1tLS79bSGAACL87SLi7T19bS0tLv0iwCGtbuLi4uutbW0tLS08LsAhryRi4uL
        rvDwtLS0tLvwhob0i4uLi4v09bu0tLS09YYA9IuGi4uLtPX1ta6utPSGhryRhouLi4u19fSLi7XwhgC1
        u4aGi4uLrvX1i4sJtYaGi/OuhrT18vT1vIu084sAAIau866LvPXzu4uR9K4AAAAAhq7zu5GLi5G7866G
        AAAAAACGi7W89PS8tYsAAAAAAAAAAIYAhoaGhoYAAAAAAPq/AADwBwAA4AMAAMABAACAAQAAAAEAAAAA
        AAAAAAAAgAAAAAAAAACAAAAAAAEAAIADAADAAwAA4A8AAPQfAAA=
</value>
  </data>
</root>